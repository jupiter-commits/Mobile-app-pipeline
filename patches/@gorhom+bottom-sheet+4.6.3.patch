diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx
index f20e3dc..7401957 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx
@@ -1,57 +1,59 @@
+import invariant from 'invariant';
 import React, {
-  useMemo,
-  useCallback,
   forwardRef,
-  useImperativeHandle,
   memo,
+  useCallback,
   useEffect,
+  useImperativeHandle,
+  useMemo,
 } from 'react';
 import { Platform } from 'react-native';
-import invariant from 'invariant';
+import { State } from 'react-native-gesture-handler';
 import Animated, {
+  Extrapolate,
+  ReduceMotion,
+  WithSpringConfig,
+  WithTimingConfig,
+  cancelAnimation,
+  interpolate,
+  runOnJS,
+  runOnUI,
   useAnimatedReaction,
-  useSharedValue,
   useAnimatedStyle,
   useDerivedValue,
-  runOnJS,
-  interpolate,
-  Extrapolate,
-  runOnUI,
-  cancelAnimation,
+  useSharedValue,
   useWorkletCallback,
-  WithSpringConfig,
-  WithTimingConfig,
 } from 'react-native-reanimated';
-import { State } from 'react-native-gesture-handler';
-import {
-  useScrollable,
-  usePropsValidator,
-  useReactiveSharedValue,
-  useNormalizedSnapPoints,
-  useKeyboard,
-} from '../../hooks';
 import {
   BottomSheetInternalProvider,
   BottomSheetProvider,
 } from '../../contexts';
-import BottomSheetContainer from '../bottomSheetContainer';
-import BottomSheetGestureHandlersProvider from '../bottomSheetGestureHandlersProvider';
+import {
+  useKeyboard,
+  useNormalizedSnapPoints,
+  usePropsValidator,
+  useReactiveSharedValue,
+  useScrollable,
+} from '../../hooks';
 import BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';
-import BottomSheetHandleContainer from '../bottomSheetHandleContainer';
 import BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';
-import BottomSheetFooterContainer from '../bottomSheetFooterContainer/BottomSheetFooterContainer';
+import BottomSheetContainer from '../bottomSheetContainer';
 import BottomSheetDraggableView from '../bottomSheetDraggableView';
+import BottomSheetFooterContainer from '../bottomSheetFooterContainer/BottomSheetFooterContainer';
+import BottomSheetGestureHandlersProvider from '../bottomSheetGestureHandlersProvider';
+import BottomSheetHandleContainer from '../bottomSheetHandleContainer';
 // import BottomSheetDebugView from '../bottomSheetDebugView';
 import {
+  ANIMATION_SOURCE,
   ANIMATION_STATE,
-  KEYBOARD_STATE,
   KEYBOARD_BEHAVIOR,
-  SHEET_STATE,
-  SCROLLABLE_STATE,
   KEYBOARD_BLUR_BEHAVIOR,
   KEYBOARD_INPUT_MODE,
-  ANIMATION_SOURCE,
+  KEYBOARD_STATE,
+  SCROLLABLE_STATE,
+  SHEET_STATE,
 } from '../../constants';
+import type { BottomSheetMethods, Insets } from '../../types';
 import {
   animate,
   getKeyboardAnimationConfigs,
@@ -59,29 +61,28 @@ import {
   print,
 } from '../../utilities';
 import {
-  DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ANIMATE_ON_MOUNT,
+  DEFAULT_DYNAMIC_SIZING,
   DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,
   DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,
   DEFAULT_ENABLE_OVER_DRAG,
-  DEFAULT_ANIMATE_ON_MOUNT,
+  DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,
   DEFAULT_KEYBOARD_BEHAVIOR,
   DEFAULT_KEYBOARD_BLUR_BEHAVIOR,
   DEFAULT_KEYBOARD_INPUT_MODE,
+  DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,
   INITIAL_CONTAINER_HEIGHT,
+  INITIAL_CONTAINER_OFFSET,
   INITIAL_HANDLE_HEIGHT,
   INITIAL_POSITION,
   INITIAL_SNAP_POINT,
-  DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,
-  INITIAL_CONTAINER_OFFSET,
-  INITIAL_VALUE,
-  DEFAULT_DYNAMIC_SIZING,
-  DEFAULT_ACCESSIBLE,
-  DEFAULT_ACCESSIBILITY_LABEL,
-  DEFAULT_ACCESSIBILITY_ROLE
+  INITIAL_VALUE
 } from './constants';
-import type { BottomSheetMethods, Insets } from '../../types';
-import type { BottomSheetProps, AnimateToPositionType } from './types';
 import { styles } from './styles';
+import type { AnimateToPositionType, BottomSheetProps } from './types';
 
 Animated.addWhitelistedUIProps({
   decelerationRate: true,
@@ -98,8 +99,7 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
     //#region extract props
     const {
       // animations configurations
-      animationConfigs: _providedAnimationConfigs,
-
+       animationConfigs,
       // configurations
       index: _providedIndex = 0,
       snapPoints: _providedSnapPoints,
@@ -173,6 +173,19 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
     //#endregion
 
     //#region layout variables
+        const _providedAnimationConfigs = useMemo(() => {
+        if (!animationConfigs) {
+          return undefined;
+        }
+  
+        if (ReduceMotion) {
+          animationConfigs.reduceMotion = ReduceMotion.Never;
+        }
+  
+        return animationConfigs;
+      }, [animationConfigs]);
+      //#endregion
+  
     /**
      * This variable is consider an internal variable,
      * that will be used conditionally in `animatedContainerHeight`
@@ -722,6 +735,9 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
          * force animation configs from parameters, if provided
          */
         if (configs !== undefined) {
+         if (ReduceMotion) {
+            configs.reduceMotion = ReduceMotion.Never;
+          }
           animatedPosition.value = animate({
             point: position,
             configs,
diff --git a/node_modules/@gorhom/bottom-sheet/src/constants.ts b/node_modules/@gorhom/bottom-sheet/src/constants.ts
index cc8fb9f..5fd3244 100644
--- a/node_modules/@gorhom/bottom-sheet/src/constants.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/constants.ts
@@ -1,5 +1,5 @@
 import { Dimensions, Platform } from 'react-native';
-import Animated, { Easing } from 'react-native-reanimated';
+import Animated, { Easing, ReduceMotion } from 'react-native-reanimated';
 
 const { height: WINDOW_HEIGHT, width: WINDOW_WIDTH } = Dimensions.get('window');
 const { height: SCREEN_HEIGHT, width: SCREEN_WIDTH } = Dimensions.get('screen');
@@ -72,11 +72,15 @@ const ANIMATION_CONFIGS_IOS = {
   overshootClamping: true,
   restDisplacementThreshold: 10,
   restSpeedThreshold: 10,
+  ...(ReduceMotion ? { reduceMotion: ReduceMotion.Never } : {}),
+
 };
 
 const ANIMATION_CONFIGS_ANDROID = {
   duration: ANIMATION_DURATION,
   easing: ANIMATION_EASING,
+ ...(ReduceMotion ? { reduceMotion: ReduceMotion.Never } : {}),
+
 };
 
 const ANIMATION_CONFIGS =
@@ -116,25 +120,11 @@ const KEYBOARD_INPUT_MODE = {
 const KEYBOARD_DISMISS_THRESHOLD = 12.5;
 
 export {
-  GESTURE_SOURCE,
-  SHEET_STATE,
-  ANIMATION_STATE,
-  ANIMATION_METHOD,
-  ANIMATION_SOURCE,
-  SCROLLABLE_TYPE,
-  SCROLLABLE_STATE,
-  KEYBOARD_STATE,
-  WINDOW_HEIGHT,
-  WINDOW_WIDTH,
-  SCREEN_HEIGHT,
+  ANIMATION_CONFIGS, ANIMATION_DURATION, ANIMATION_EASING, ANIMATION_METHOD,
+  ANIMATION_SOURCE, ANIMATION_STATE, GESTURE_SOURCE, KEYBOARD_BEHAVIOR,
+  KEYBOARD_BLUR_BEHAVIOR, KEYBOARD_DISMISS_THRESHOLD, KEYBOARD_INPUT_MODE, KEYBOARD_STATE, MODAL_STACK_BEHAVIOR, SCREEN_HEIGHT,
   SCREEN_WIDTH,
-  SCROLLABLE_DECELERATION_RATE_MAPPER,
-  MODAL_STACK_BEHAVIOR,
-  KEYBOARD_BEHAVIOR,
-  KEYBOARD_BLUR_BEHAVIOR,
-  KEYBOARD_INPUT_MODE,
-  KEYBOARD_DISMISS_THRESHOLD,
-  ANIMATION_CONFIGS,
-  ANIMATION_EASING,
-  ANIMATION_DURATION,
+  SCROLLABLE_DECELERATION_RATE_MAPPER, SCROLLABLE_STATE, SCROLLABLE_TYPE, SHEET_STATE, WINDOW_HEIGHT,
+  WINDOW_WIDTH
 };
+
diff --git a/node_modules/@gorhom/bottom-sheet/src/utilities/animate.ts b/node_modules/@gorhom/bottom-sheet/src/utilities/animate.ts
index 81fec5b..c7159cf 100644
--- a/node_modules/@gorhom/bottom-sheet/src/utilities/animate.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/utilities/animate.ts
@@ -1,11 +1,9 @@
 import {
+  AnimationCallback,
   WithSpringConfig,
   WithTimingConfig,
-  withTiming,
   withSpring,
-  AnimationCallback,
-  // @ts-ignore
-  ReduceMotion,
+  withTiming,
 } from 'react-native-reanimated';
 import { ANIMATION_CONFIGS, ANIMATION_METHOD } from '../constants';
 
@@ -28,13 +26,6 @@ export const animate = ({
     configs = ANIMATION_CONFIGS;
   }
 
-  // Users might have an accessibililty setting to reduce motion turned on.
-  // This prevents the animation from running when presenting the sheet, which results in
-  // the bottom sheet not even appearing so we need to override it to ensure the animation runs.
-  if (ReduceMotion) {
-    // @ts-ignore
-    configs.reduceMotion = ReduceMotion.Never;
-  }
   
   // detect animation type
   const type =
